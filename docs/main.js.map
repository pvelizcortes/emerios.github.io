{"version":3,"sources":["./src/app/components/inicio/cadena-larga/cadena-larga.component.ts","./src/app/components/inicio/cadena-larga/cadena-larga.component.html","./src/app/components/inicio/cadena-larga/process-file/process-file.component.ts","./src/app/components/inicio/cadena-larga/process-file/process-file.component.html","./src/app/components/inicio/welcome/welcome.component.ts","./src/app/components/inicio/welcome/welcome.component.html","./src/app/components/inicio/cadena-larga/generate-random/generate-random.component.ts","./src/app/components/inicio/cadena-larga/generate-random/generate-random.component.html","./src/app/components/inicio/cadena-larga/cadena-larga.service.ts","./src/environments/environment.ts","./src/app/components/inicio/cadena-larga/manual-input/manual-input.component.ts","./src/app/components/inicio/cadena-larga/manual-input/manual-input.component.html","./src/app/components/inicio/cadena-larga/shared/array-list/array-list.component.ts","./src/app/components/inicio/cadena-larga/shared/array-list/array-list.component.html","./src/app/components/inicio/info/info.component.ts","./src/app/components/inicio/info/info.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/inicio/inicio.component.ts","./src/app/components/inicio/inicio.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CadenaLargaService } from './cadena-larga.service';\n\n@Component({\n  selector: 'app-cadena-larga',\n  templateUrl: './cadena-larga.component.html',\n  styleUrls: ['./cadena-larga.component.css']\n})\nexport class CadenaLargaComponent implements OnInit { \n  selectedOption = 'seleccione';\n  constructor(public service: CadenaLargaService,   private router: Router,) {  \n  }\n\n  ngOnInit(): void {\n  }\n\n  onChange(event:string){  \n    this.selectedOption = event;\n    this.router.navigate([`inicio/cadenalarga/${event}`]);\n  }\n}\n","<div class=\"container\">\r\n    <div class=\"row mb-4\">\r\n        <div class=\"col\">\r\n            <h4>Seleccione una opción: </h4>\r\n            <select class=\"form-control\" (change)=\"onChange($event.target.value)\">\r\n                <option value=\"seleccione\" selected>-- Seleccione --</option>\r\n                <option value=\"manual-input\">Entrada Manual</option>\r\n                <option value=\"process-file\">Subir Archivo .txt / .csv</option>\r\n                <option value=\"generate-random\">Generación de Matriz Aleatoria</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"selectedOption != 'seleccione'\">\r\n        <div class=\"col\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CadenaLargaService } from '../cadena-larga.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ArrayListComponent } from '../shared/array-list/array-list.component';\n\n@Component({\n  selector: 'app-process-file',\n  templateUrl: './process-file.component.html',\n  styleUrls: ['./process-file.component.css']\n})\nexport class ProcessFileComponent implements OnInit {\n  fileArray = [];\n  file: any;\n  fileName: string = \"\";\n  @ViewChild(ArrayListComponent) arrayList : ArrayListComponent;\n  \n  constructor(public service: CadenaLargaService, private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  processFile(e) {\n    this.file = e.target.files[0];\n    let fileReader = new FileReader();\n\n    fileReader.onload = (e) => {\n      this.fileArray = this.service.transformToArray(fileReader.result.toString());\n      this.fileName = this.file.name;\n      this.arrayList.cleanAll();\n    }    \n    fileReader.readAsText(this.file);\n  }\n\n  testFile(name: string) {\n    this.fileName = `/assets/testingFiles/test${name}`;\n    this.http.get(this.fileName, { responseType: 'text' }).subscribe(data => {\n      this.fileArray = this.service.transformToArray(data);;\n      this.arrayList.cleanAll();    })\n  }\n\n}\n","<div class=\"card w-100\">\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Procesar Archivo</h5>\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <p>Probar directamente con los archivos de ejemplo <b>.txt | .csv</b></p>\n                            <button class=\"btn btn-primary btn-block\" (click)=\"testFile('Txt.txt');\">Test .txt</button>\n                            <button class=\"btn btn-primary btn-block\" (click)=\"testFile('Csv.csv');\">Test .csv</button>\n                        </div>\n                    </div>\n                    <hr>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <h4>Subir Archivo .txt/.csv</h4>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col text-center\">\n                            <input class=\"form-control mb-2\" accept=\".txt,.csv\" type=\"file\"\n                                (change)=\"processFile($event)\">                            \n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-8\">\n                    <p *ngIf=\"fileName\" class=\"pl-2\"><b>Nombre Archivo: </b> {{fileName}}</p>\n                    <app-array-list [masterArray]=\"fileArray\"></app-array-list>\n                </div>\n            </div>\n            <hr>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  test(){\n    alert(\"testing\");\n  }\n\n}\n","<div class=\"px-4 py-5 my-5 text-center\">    \n    <h1 class=\"display-5 fw-bold\">Cadena Larga</h1>\n    <div class=\"col-lg-6 mx-auto\">\n        <p class=\"lead mb-4\">Sea una matriz cuadrada de dos dimensiones, de caracteres (cualquiera), devuelva la cadena de caracteres adyacentes iguales más larga. Debe buscar en vertical, diagonal y horizontal.</p>\n        <div class=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\n            <button routerLink=\"/inicio/cadenalarga\" class=\"btn btn-primary btn-lg px-4 gap-3\">Continuar</button> \n        </div>\n    </div>\n</div>\n\n<router-outlet></router-outlet>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CadenaLargaService } from '../cadena-larga.service';\nimport { ArrayListComponent } from '../shared/array-list/array-list.component';\n\n@Component({\n  selector: 'app-generate-random',\n  templateUrl: './generate-random.component.html',\n  styleUrls: ['./generate-random.component.css']\n})\nexport class GenerateRandomComponent implements OnInit {\n\n  formMaster: FormGroup;\n  randomArray = [];\n  @ViewChild(ArrayListComponent) arrayList : ArrayListComponent;\n\n  constructor(private formBuilder: FormBuilder, public service: CadenaLargaService) {\n    this.formMaster = this.formBuilder.group({\n      textEjeX: ['', [Validators.required, Validators.min(4), Validators.max(20),  Validators.pattern(\"^[0-9]*$\")]],\n      textEjeY: ['', [Validators.required, Validators.min(4), Validators.max(20),  Validators.pattern(\"^[0-9]*$\")]]\n    });\n   }\n\n  ngOnInit(): void {\n  } \n\n  onSubmit() {\n    this.randomArray = [];\n    let ejeX = Number.parseInt(this.formMaster.value.textEjeX);\n    let ejeY = Number.parseInt(this.formMaster.value.textEjeY);\n\n    this.randomArray = this.service.generateRandomText(ejeX, ejeY);\n    this.arrayList.cleanAll();\n  }\n\n}\n","<div class=\"card w-100\">\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Generar Matriz Aleatoria</h5>\n        <div class=\"container\">\n            <form [formGroup]=\"formMaster\" (ngSubmit)=\"onSubmit()\" #f=\"ngForm\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <small>Filas *</small>\n                                <input type=\"number\" placeholder=\"ej: 10\" class=\"form-control\"\n                                    formControlName=\"textEjeX\" min=\"4\" max=\"20\">\n                                <mat-error *ngIf=\"formMaster.get('textEjeX').hasError('required')\"><small\n                                        class=\"text-danger\">* Campo\n                                        Requerido</small>\n                                </mat-error>\n                                <mat-error *ngIf=\"formMaster.get('textEjeX').hasError('min')\"><small\n                                        class=\"text-danger\">El\n                                        numero debe ser mayor o igual a 4.</small>\n                                </mat-error>\n                                <mat-error *ngIf=\"formMaster.get('textEjeX').hasError('max')\"><small\n                                        class=\"text-danger\">El\n                                        numero debe ser menor o igual a 20.</small>\n                                </mat-error>\n                                <mat-error *ngIf=\"formMaster.get('textEjeX').hasError('pattern')\"><small\n                                        class=\"text-danger\">Debe ingresar solo números.</small>\n                                </mat-error>\n                            </div>\n                            <div class=\"col\">\n                                <small>Columnas *</small>\n                                <input type=\"number\" placeholder=\"ej: 10\" class=\"form-control\"\n                                    formControlName=\"textEjeY\" min=\"4\" max=\"20\">\n                                <mat-error *ngIf=\"formMaster.get('textEjeY').hasError('required')\"><small\n                                        class=\"text-danger\">* Campo\n                                        Requerido</small>\n                                </mat-error>\n                                <mat-error *ngIf=\"formMaster.get('textEjeY').hasError('min')\"><small\n                                        class=\"text-danger\">El\n                                        numero debe ser mayor o igual a 4.</small>\n                                </mat-error>\n                                <mat-error *ngIf=\"formMaster.get('textEjeY').hasError('max')\"><small\n                                        class=\"text-danger\">El\n                                        numero debe ser menor o igual a 20.</small>\n                                </mat-error>\n                                <mat-error *ngIf=\"formMaster.get('textEjeY').hasError('pattern')\"><small\n                                        class=\"text-danger\">Debe ingresar solo números.</small>\n                                </mat-error>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <br>\n                                <button class=\"btn btn-primary btn-block\" type=\"submit\"\n                                    [disabled]=\"!formMaster.valid\">Generar</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-8\">\n                        <app-array-list [masterArray]=\"randomArray\"></app-array-list>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CadenaLargaService {\n\n  constructor() { }\n\n  generateRandomText(ejeX: number, ejeY: number) {\n    var arr = [];\n    for (var i = 0; i < ejeX; i++) {\n      arr[i] = [];\n      for (var j = 0; j < ejeY; j++) {\n        arr[i][j] = this.randomCharacter();\n      }\n    }\n    return arr;\n  }\n\n  transformToArray(text: string) {\n      var arr1 = text.split(\"\\n\");\n      var arr2 = [];\n      for (var i = 0; i < arr1.length; i++) {\n        arr2[i] = arr1[i].split(\",\").map(x => { return x.trim() });\n      }\n      return arr2;  \n  }\n\n  randomCharacter() {\n    let characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n    let charactersLength = characters.length;\n    return characters.charAt(Math.floor(Math.random() * charactersLength));\n  } \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CadenaLargaService } from '../cadena-larga.service';\nimport { ArrayListComponent } from '../shared/array-list/array-list.component';\n\n@Component({\n  selector: 'app-manual-input',\n  templateUrl: './manual-input.component.html',\n  styleUrls: ['./manual-input.component.css']\n})\nexport class ManualInputComponent implements OnInit {\n  \n  formMaster: FormGroup;\n  inputArray = [];\n  @ViewChild(ArrayListComponent) arrayList : ArrayListComponent;\n\n  constructor(private formBuilder: FormBuilder, public service: CadenaLargaService) { \n    this.formMaster = this.formBuilder.group({\n      textInput: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  processText() {    \n    this.inputArray = this.service.transformToArray(this.formMaster.value.textInput);    \n    this.arrayList.cleanAll();\n  }\n\n\n}\n","<div class=\"card w-100\">\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Ingresar Texto</h5>\n        <div class=\"container\">\n            <form [formGroup]=\"formMaster\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <h4></h4>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <textarea class=\"form-control mb-2\" rows=\"7\" formControlName=\"textInput\"></textarea>\n                                <button class=\"btn-block btn btn-primary\" (click)=\"processText();\">Generar</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-8\">\n                        <app-array-list [masterArray]=\"inputArray\"></app-array-list>\n                    </div>\n                </div>\n            </form>\n            <hr>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { CadenaLargaService } from '../../cadena-larga.service';\n\n@Component({\n  selector: 'app-array-list',\n  templateUrl: './array-list.component.html',\n  styleUrls: ['./array-list.component.css']\n})\nexport class ArrayListComponent implements OnInit {\n\n  @Input() masterArray = [];\n  /* Array de los 8 movimientos posibles (sentido del reloj) */\n  arrayOfMovements = [[-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1], [0, -1], [-1, -1]];\n\n  rowLength: number = 0;\n  colLength: number = 0;\n  maxCount: number = 0;\n\n  searchingChar: string = ''; // Caracter que se está buscando\n  maxCharFound: string = '';\n  finalResponse: string = '';\n\n  constructor(public service: CadenaLargaService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  processArray() {\n    try {\n      this.cleanAll();\n      this.rowLength = (this.masterArray.length);\n      this.colLength = (this.masterArray[0].length);\n\n      for (let row = 0; row < this.rowLength; row++) {\n        for (let col = 0; col < this.colLength; col++) {\n          this.searchingChar = this.masterArray[row][col];\n          this.arrayOfMovements.forEach(mov => { // recorrer los 8 movimientos posibles.\n            let contador = this.moveTo((row + mov[0]), (col + mov[1]), mov[0], mov[1], 1);\n            if (contador > this.maxCount) {\n              this.maxCount = contador;\n              this.maxCharFound = this.searchingChar;\n            }\n          });\n        }\n      }      \n    }\n    catch (ex) {\n      console.log(`Error: ${ex}`);\n    }\n  }\n\n  /*\n   * Funcion recursiva\n   */\n  moveTo(row, col, addRow, addCol, contador) {\n    if ((row > (this.rowLength - 1) || row < 0) || (col > (this.colLength - 1) || col < 0)) // verificar que no salga de los limites.\n      return contador;\n    if (this.searchingChar == this.masterArray[row][col]) {\n      contador++;\n      return this.moveTo((row + addRow), (col + addCol), addRow, addCol, contador);\n    }\n    return contador;\n  }\n\n  cleanAll() {\n    this.maxCount = 0;\n    this.maxCharFound = '';\n    this.finalResponse = '';\n  }\n\n  get charToShow() {\n    var _char = '';\n    for (let index = 0; index < this.maxCount; index++) {\n      _char += _char == '' ? this.maxCharFound : `, ${this.maxCharFound}`;\n    }\n    return _char;\n  }\n}","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\" *ngIf=\"masterArray.length > 0\" style=\"overflow: auto;\">\n            <a class=\"btn btn-success mb-2\" (click)=\"processArray();\">Buscar caracteres continuos</a>\n            <p>\n                Resultado :  <b class=\"text-danger\">{{charToShow}}</b> \n            </p>\n            <table class=\"table table-sm\">\n                <tr *ngFor=\"let row of masterArray;\">\n                    <td *ngFor=\"let field of row\">\n                        <span [ngClass]=\"maxCharFound===field ? 'char-found': 'char-default'\">{{field}}</span>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"col text-center\" *ngIf=\"!(masterArray.length > 0)\">\n            <h4>No existen elementos</h4>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.css']\n})\nexport class InfoComponent implements OnInit {\n\n  processCode :string = '';\n  recursiveCode: string = '';\n  \n\n  constructor() {\n    this.processCode = `  \n    /* Array de los 8 movimientos posibles (sentido del reloj) */\n    arrayOfMovements = [[-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1], [0, -1], [-1, -1]];\n    \n    processArray() {\n      try {\n        this.cleanAll();\n        this.rowLength = (this.masterArray.length);\n        this.colLength = (this.masterArray[0].length);\n  \n        for (let row = 0; row < this.rowLength; row++) {\n          for (let col = 0; col < this.colLength; col++) {\n            this.searchingChar = this.masterArray[row][col];\n            this.arrayOfMovements.forEach(mov => { // recorrer los 8 movimientos posibles.\n              let contador = this.moveTo((row + mov[0]), (col + mov[1]), mov[0], mov[1], 1);\n              if (contador > this.maxCount) {\n                this.maxCount = contador;\n                this.maxCharFound = this.searchingChar;\n              }\n            });\n          }\n        }      \n      }\n      catch (ex) {\n        console.log(ex);\n      }\n    }`;\n\n    this.recursiveCode = `  \n    moveTo(row, col, addRow, addCol, contador) {\n      if ((row > (this.rowLength - 1) || row < 0) || (col > (this.colLength - 1) || col < 0))\n        return contador;\n      if (this.searchingChar == this.masterArray[row][col]) {\n        contador++;\n        return this.moveTo((row + addRow), (col + addCol), addRow, addCol, contador);\n      }\n      return contador;\n    }`;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <hr>\n            <p><b>Angular + Bootstrap</b></p>\n            <p>Para la solución del problema utilicé un algoritmo que recorriera uno por uno los caracteres de la\n                matriz,\n                y por cada uno de ellos realicé una búsqueda recursiva en 8 direcciones.\n                <br> <br>\n                Luego de terminar la busqueda recursiva de cada elemento se evalua si fue la mayor cantidad de veces\n                encontrada.\n            </p>\n            <hr>\n            <h4>Función Recorrer Array</h4>\n            <pre class=\"mt-0 borderOfCode\">\n                <code [highlight]=\"processCode\" [languages]=\"['typescript']\"></code>\n            </pre>\n            <h4>Función recursiva</h4>\n            <pre class=\"mt-0 borderOfCode\">\n                <code [highlight]=\"recursiveCode\" [languages]=\"['typescript']\"></code>\n            </pre>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n"," \n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"bg-dark text-white mb-2\">\n    <div class=\"container\">\n        <div class=\"d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start\">\n            <ul class=\"nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0\">\n                <li><a routerLink=\"/inicio\" class=\"nav-link px-4 text-white\">Inicio</a></li>                \n                <li><a routerLink=\"/inicio/cadenalarga\" class=\"nav-link px-4 text-white\">Cadena Larga</a></li>\n                <li><a routerLink=\"/inicio/info\" class=\"nav-link px-4 text-white\">Ver Codigo</a></li>\n            </ul>\n        </div>\n    </div>\n</header>\n\n<router-outlet></router-outlet>\n\n<footer class=\"d-flex flex-wrap justify-content-between align-items-center border-top fixed-bottom\">\n    <p class=\"col-md-4 mb-0 text-muted\">Test for Emerios | © 2021 Pablo Veliz</p>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { InicioComponent } from './components/inicio/inicio.component';\nimport { WelcomeComponent } from './components/inicio/welcome/welcome.component';\nimport { CadenaLargaComponent } from './components/inicio/cadena-larga/cadena-larga.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GenerateRandomComponent } from './components/inicio/cadena-larga/generate-random/generate-random.component';\nimport { ProcessFileComponent } from './components/inicio/cadena-larga/process-file/process-file.component';\nimport { ManualInputComponent } from './components/inicio/cadena-larga/manual-input/manual-input.component';\nimport { ArrayListComponent } from './components/inicio/cadena-larga/shared/array-list/array-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InfoComponent } from './components/inicio/info/info.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InicioComponent,\n    WelcomeComponent,\n    CadenaLargaComponent,\n    GenerateRandomComponent,\n    ProcessFileComponent,\n    ManualInputComponent,\n    ArrayListComponent,\n    InfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HighlightModule\n  ],\n  providers: [\n    {\n      provide: HIGHLIGHT_OPTIONS,\n      useValue: {\n        fullLibraryLoader: () => import('highlight.js'),\n      }\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InicioComponent } from '../app/components/inicio/inicio.component';\nimport { WelcomeComponent } from '../app/components/inicio/welcome/welcome.component';\nimport { CadenaLargaComponent } from '../app/components/inicio/cadena-larga/cadena-larga.component';\nimport { ManualInputComponent } from './components/inicio/cadena-larga/manual-input/manual-input.component';\nimport { GenerateRandomComponent } from './components/inicio/cadena-larga/generate-random/generate-random.component';\nimport { ProcessFileComponent } from './components/inicio/cadena-larga/process-file/process-file.component';\nimport { InfoComponent } from './components/inicio/info/info.component';\n\n\nconst routes: Routes = [{ path: '', redirectTo: '/inicio', pathMatch: 'full' },\n{\n  path: 'inicio', component: InicioComponent, children: [\n    { path: '', component: WelcomeComponent },\n    {\n      path: 'cadenalarga', component: CadenaLargaComponent, children: [\n        { path: 'manual-input', component: ManualInputComponent },\n        { path: 'generate-random', component: GenerateRandomComponent },\n        { path: 'process-file', component: ProcessFileComponent }\n      ]\n    },\n    { path: 'info', component: InfoComponent}\n  ]\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}